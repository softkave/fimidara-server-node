{
    "basePathname": "/v1/permissionItems/deleteItems",
    "method": "delete",
    "requestBody": {
        "required": true,
        "description": "Delete permission items endpoint params.",
        "__id": "FieldObject",
        "name": "DeletePermissionItemsEndpointParams",
        "fields": {
            "workspaceId": {
                "data": {
                    "description": "Workspace ID. When not provided, will default to using workspace ID from agent token.",
                    "__id": "FieldString",
                    "example": "wrkspce_000000000000000000000"
                },
                "optional": true
            },
            "items": {
                "data": {
                    "__id": "FieldArray",
                    "type": {
                        "__id": "FieldObject",
                        "name": "DeletePermissionItemInput",
                        "fields": {
                            "target": {
                                "data": {
                                    "__id": "FieldObject",
                                    "name": "DeletePermissionItemInputTarget",
                                    "fields": {
                                        "targetType": {
                                            "data": {
                                                "description": "Resource type permission is effected on. Target ID or other target identifiers like folderpath should be provided when using target type to limit from which target an entity should have or not have access to. When adding permissions, target type without a target identifier will default to workspace. When deleting, target types without a target identifier will delete all permissions with that target type. Having a target type means an entity is granted or denied access to all resources of that type contained within a parent target like all files in a folder, or all folders in a workspace. This is why target ID or a specific target should be provided when adding or removing permissions to avoid granting permissions to all files in a workspace when you only wanted files in a folder. Resource type also works with appliesTo to limit the access to only the target even when target type is set, or to the target and children, or only to children excluding the target itself. The last one is especially useful when you want an entity have access to create or delete folders in a folder but not delete the folder itself.",
                                                "__id": "FieldString",
                                                "example": "file",
                                                "valid": {
                                                    "0": "*",
                                                    "1": "workspace",
                                                    "2": "collaborationRequest",
                                                    "3": "agentToken",
                                                    "4": "permissionGroup",
                                                    "5": "permissionItem",
                                                    "6": "folder",
                                                    "7": "file",
                                                    "8": "user",
                                                    "9": "tag",
                                                    "10": "usageRecord"
                                                },
                                                "enumName": "WorkspaceAppResourceType"
                                            },
                                            "optional": true
                                        },
                                        "targetId": {
                                            "data": {
                                                "description": "Resource ID permission is effected on.",
                                                "__id": "FieldString",
                                                "example": "wrkspce_000000000000000000000"
                                            },
                                            "optional": true
                                        },
                                        "filepath": {
                                            "data": {
                                                "description": "File path with workspace rootname.",
                                                "__id": "FieldString",
                                                "example": "/workspace-rootname/my-outer-folder/my-image-file.png"
                                            },
                                            "optional": true
                                        },
                                        "folderpath": {
                                            "data": {
                                                "description": "Folder path with workspace rootname.",
                                                "__id": "FieldString",
                                                "example": "/workspace-rootname/my-outer-folder/my-inner-folder"
                                            },
                                            "optional": true
                                        },
                                        "workspaceRootname": {
                                            "data": {
                                                "description": "Workspace root name, must be a URL compatible name.",
                                                "__id": "FieldString",
                                                "example": "fimidara-rootname"
                                            },
                                            "optional": true
                                        }
                                    }
                                },
                                "required": true
                            },
                            "action": {
                                "data": {
                                    "description": "Action",
                                    "__id": "FieldString",
                                    "example": "create",
                                    "valid": {
                                        "0": "*",
                                        "1": "create",
                                        "2": "read",
                                        "3": "update",
                                        "4": "delete",
                                        "5": "grantPermission"
                                    },
                                    "enumName": "AppActionType"
                                },
                                "optional": true
                            },
                            "grantAccess": {
                                "data": {
                                    "description": "Whether access is granted or not. Access is granted if true, denied if false.",
                                    "__id": "FieldBoolean"
                                },
                                "optional": true
                            },
                            "entity": {
                                "data": {
                                    "__id": "FieldObject",
                                    "name": "NewPermissionItemInputEntity",
                                    "fields": {
                                        "entityId": {
                                            "data": {
                                                "description": "Permission entity resource ID. A permission entity is a resource granted or deny access. This can be a user, a permission group, or an agent token.",
                                                "__id": "FieldString",
                                                "example": "wrkspce_000000000000000000000"
                                            },
                                            "required": true
                                        }
                                    }
                                },
                                "optional": true
                            },
                            "appliesTo": {
                                "data": {
                                    "description": "Whether this permission applies to only to the target, or the target and children of same type, or only children of the target type declared in permission item.",
                                    "__id": "FieldString",
                                    "example": "selfAndChildren",
                                    "valid": {
                                        "0": "self",
                                        "1": "selfAndChildren",
                                        "2": "children"
                                    },
                                    "enumName": "PermissionItemAppliesTo"
                                },
                                "optional": true
                            }
                        }
                    },
                    "max": 1000
                },
                "optional": true
            },
            "entity": {
                "data": {
                    "__id": "FieldObject",
                    "name": "NewPermissionItemInputEntity",
                    "fields": {
                        "entityId": {
                            "data": {
                                "description": "Permission entity resource ID. A permission entity is a resource granted or deny access. This can be a user, a permission group, or an agent token.",
                                "__id": "FieldString",
                                "example": "wrkspce_000000000000000000000"
                            },
                            "required": true
                        }
                    }
                },
                "optional": true
            }
        }
    },
    "requestHeaders": {
        "__id": "FieldObject",
        "name": "HttpEndpointRequestHeaders_AuthRequired_JsonContentType",
        "fields": {
            "Authorization": {
                "data": {
                    "description": "Access token.",
                    "__id": "FieldString",
                    "example": "Bearer <token>"
                },
                "required": true
            },
            "Content-Type": {
                "data": {
                    "description": "HTTP JSON request content type.",
                    "__id": "FieldString",
                    "example": "application/json",
                    "valid": {
                        "0": "application/json"
                    }
                },
                "required": true
            }
        }
    },
    "responseHeaders": {
        "__id": "FieldObject",
        "name": "HttpEndpointResponseHeaders_ContentType_ContentLength",
        "fields": {
            "Content-Type": {
                "data": {
                    "description": "HTTP JSON response content type.",
                    "__id": "FieldString",
                    "valid": {
                        "0": "application/json"
                    }
                },
                "required": true
            },
            "Content-Length": {
                "data": {
                    "description": "HTTP response content length in bytes.",
                    "__id": "FieldString"
                },
                "required": true
            }
        }
    },
    "responseBody": {
        "required": true,
        "description": "Long running job endpoint success result.",
        "__id": "FieldObject",
        "name": "LongRunningJobResult",
        "fields": {
            "jobId": {
                "data": {
                    "description": "Long running job ID.",
                    "__id": "FieldString",
                    "example": "job0000_000000000000000000000"
                },
                "required": true
            }
        }
    },
    "name": "DeletePermissionItemsEndpoint",
    "description": "Delete permission items endpoint.",
    "errorResponseHeaders": {
        "__id": "FieldObject",
        "name": "HttpEndpointResponseHeaders_ContentType_ContentLength",
        "fields": {
            "Content-Type": {
                "data": {
                    "description": "HTTP JSON response content type.",
                    "__id": "FieldString",
                    "valid": {
                        "0": "application/json"
                    }
                },
                "required": true
            },
            "Content-Length": {
                "data": {
                    "description": "HTTP response content length in bytes.",
                    "__id": "FieldString"
                },
                "required": true
            }
        }
    },
    "errorResponseBody": {
        "required": true,
        "description": "Endpoint error result.",
        "__id": "FieldObject",
        "name": "EndpointErrorResult",
        "fields": {
            "errors": {
                "data": {
                    "description": "Endpoint call response errors.",
                    "__id": "FieldArray",
                    "type": {
                        "__id": "FieldObject",
                        "name": "OperationError",
                        "fields": {
                            "name": {
                                "data": {
                                    "description": "Error name.",
                                    "__id": "FieldString",
                                    "example": "ValidationError"
                                },
                                "required": true
                            },
                            "message": {
                                "data": {
                                    "description": "Error message.",
                                    "__id": "FieldString",
                                    "example": "Workspace name is invalid."
                                },
                                "required": true
                            },
                            "action": {
                                "data": {
                                    "description": "Recommended action.",
                                    "__id": "FieldString",
                                    "valid": {
                                        "0": "loginAgain",
                                        "1": "logout",
                                        "2": "requestChangePassword"
                                    }
                                },
                                "optional": true
                            },
                            "field": {
                                "data": {
                                    "description": "Invalid field failing validation when error is ValidationError.",
                                    "__id": "FieldString",
                                    "example": "workspace.innerField.secondInnerField"
                                },
                                "optional": true
                            }
                        }
                    }
                },
                "optional": true
            }
        }
    },
    "__id": "HttpEndpointDefinition"
}